// This file was auto-generated by ML.NET Model Builder. 

using System;
using System.IO;
using System.Linq;
using GenericParkingLot.Model;


namespace GenericParkingLot.ConsoleApp
{
    class Program
    {
        static bool Predict(string path)
        {
            ModelInput sampleData = new ModelInput()
            {
                ImageSource = path,
            };


            var predictionResult = ConsumeModel.Predict(sampleData);//300 ms per image - 500 images = 2.4s

            

            Console.WriteLine($"ImageSource: {sampleData.ImageSource}");
            Console.WriteLine($"Predicted Label value {predictionResult.Prediction} \nPredicted Label scores: [{String.Join(",", predictionResult.Score)}]\n");

            return predictionResult.Prediction == "Filled";
        }

        static void Main(string[] args)
        {

            Console.Write("Input path to image for test: ");
            string path = Console.ReadLine();

            path = path.Replace("\"", "");//fixes quote path error


            FileAttributes attr = File.GetAttributes(path);
            if (attr.HasFlag(FileAttributes.Directory))
            {
                string[] files = Directory.GetFiles(path);
                int filled = 0;

                foreach(var i in files)
                {
                    if (Predict(i))
                        filled++;
                }

                Console.WriteLine($"Parking lot percent filled = { (files.Length == 0 ? 0 : 100*filled/files.Length) }%");
            }
            else
                Predict(path);


            Console.WriteLine("=============== End of process, hit any key to finish ===============");
            Console.ReadKey();
        }
    }
}
