<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="NameColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Latitude.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Longitute.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ManufacturerColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="QualityColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="AngleColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="LotSizeColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="LastCaptureColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="SpotCount.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="CamTableContextMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5wB1eucBdXrnm3V65/91eufMdXrnEnV65wAAAAAAAAAAAHZ46AB2eOgSdnjpzHZ46f92eOmbdnjhAXFy
        zQBZWVoATU8oBXBstCt6dNZ8fHXdjXhxyy8pNAADUlM/BlNVRgdUVUcQYF5zJnt02oV8duB0fXjoO4B5
        8AB0cMYAdnjoAHZ44QF2eOmbdnjp/3Z46cx2eOgSdnjoAAAAAAAAAAAAeHfqAHh36hJ3durMd3bq/3d2
        6pt/fuoBeHfpAFlZWQBZWVoBUFI2B3ZwxTuAeOexgHfjjXRutjJuaaMnbWifJ29ppDB7c9JugXjrvIB4
        6U94c9IDfHXcAAAAAAB4d+oAf37qAXd26pt3dur/d3bqzHh36hJ4d+oAAAAAAAAAAAB7d+sAfHfrDnt3
        68Z7d+v/e3frr3147Ah9eOwAAAAAAAAAAAA9QB0AAAAAAHRtthZ/dttJgXfjdYJ45YaCeOaDg3jne4J4
        51KBd+Qea2eVAHtzzgAAAAAAAAAAAH147AB9eOwIe3frr3t36/97d+vGfHfrDnt36wAAAAAAAAAAAH54
        7AB+d+wCf3jtmn947f9/eO3ygHjunoB47n6AeO5/gHjuf4B47n+AeO5/f3jtf3936n9/d+mGf3fpjH94
        6ot/eOyGf3jtfYB47n2AeO5/gHjuf4B47n+AeO5/gHjuf4B47p9/eO3yf3jt/3947Zp+d+wCfnjsAAAA
        AAAAAAAAkXvvAIJ57wCCee40g3nv2oN57/+Dee//g3nv/4N57/+Dee//g3nv/4N57/+Dee//g3nv/4N5
        7/+Dee//g3nv/4N57/+Dee//g3nv/4N57/+Dee//g3nv/4N57/+Dee//g3nv/4N57/+Dee/agnnuNIJ5
        7wCRe+8AAAAAAAAAAAAAAAAAhHnvAGVy4QCGevBChnrwwId68PaHevD/h3rw/4d68P+HevD/h3rw/4d6
        8P+HevD/h3rw/4d68P+HevD/h3rw/4d68P+HevD/h3rw/4d68P+HevD/h3rw/4d68P+HevD2hnrwwIZ6
        8EJlcuEAhHnvAAAAAAAAAAAA/wAD/+cAAefjAAHHwwQBw8EAAYPBAAGDwQQBg8EHgYPBB4GDwQeBg8EH
        gYPBBAGDwQABg8EAAYPBAAGDwQfBg8APwYPAD8CDwAuAg8EAAYPBAAGDwQABg8EOIYPBD+GDwQeBg8ED
        gYPBgAODwYADg8HwD4PAAAAD4AAAB/AAAA8=
</value>
  </data>
</root>